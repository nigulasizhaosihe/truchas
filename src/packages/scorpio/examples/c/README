-------------------------------------------------------------------------------
SCORPIO test program 
-------------------------------------------------------------------------------
This test creates a simple HDF5 file with one dataset and reads it back in for 
verification. 

It writes a 2-d dataset, where the extent of the dimensions is determined by 
the number of processes. The dataset is partitioned among processors in the first
dimension, i.e., each process gets an assigned number of rows. 
In the current example, every odd numbered process writes/reads 2 rows and every 
even numbered process accesses 3 rows of the dataset.

It illustrates using the NONUNIFORM_CONTIGUOUS_WRITE and NONUNIFORM_CONTIGUOUS_READ
patterns. 

-------------------------------------------------------------------------------
Building 
-------------------------------------------------------------------------------
You need to first build the SCORPIO library.   

--------------
Prerequisites:
--------------
MPI
C compiler
HDF5 libraries (preferably with parallel(MPI) support)

----------------
SCORPIO library
----------------
After downloading SCORPIO and gathering details of HDF5 installation, 
the following commands can be used to build and install SCORPIO library: 

	cd <SCORPIO check out directory>/src
	make CC=<C-compiler> HDF5_INCLUDE_DIR=<location of the HDF5 include directory>
	make SCORPIO_INSTALL_DIR=<user defined install location> install

In this case, CC refers to C compiler with MPI support, e.g., mpicc.

----------------
Building test
----------------
Mandatory arguments to build test program:
 CC, HDF5_INCLUDE_DIR, HDF5_LIB_DIR (or HDF5_LD_FLAGS) and SCORPIO_INSTALL_DIR (for linking with library)
 e.g., make CC=cc HDF5_INCLUDE_DIR=<path> HDF5_LIB_DIR=<path> SCORPIO_INSTALL_DIR=<path> 

Alternately, you can specify HDF5_LD_FLAGS too if you prefer more control.
 e.g., make CC=cc HDF5_INCLUDE_DIR=<path> SCORPIO_INSTALL_DIR=<path> HDF5_LD_FLAGS="-L<path> -lhdf5 -lz"

-------------------------------------------------------------------------------
Run
-------------------------------------------------------------------------------
Use 'mpirun -n <num_procs> ./simplex' to run a simple test. You can use mpiexec or equivalent command for your platform.
On a single process, you can use "./simplex" or "mpirun -n 1 ./simplex" to run the test.

./strex similarly demonstrates string dataset usage. 
./attrex shows how attributes can be handled using SCORPIO library.

Upon completion, a message ("Test success." or "Test failed.") is printed to stderr.

-------------------------------------------------------------------------------
Verify
-------------------------------------------------------------------------------
Use 'h5dump sample.h5' to print the contents of the file to screen. You can
manually verify that the correct number of rows exist in the file.

In the current example, every odd numbered process writes/reads 2 rows and every 
even numbered process accesses 3 rows of the dataset.
