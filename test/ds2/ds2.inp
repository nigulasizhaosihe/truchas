DIFFUSION SOLVER TEST 2

Nonlinear heat conduction.  2D domain, 1 cell thick.  Imposed flux at left
end of rectangular domain, Dirichlet condition at the other end, and no flux
on the remaining boundaries.  Low-conductivity inclusion in the middle of
the domain created using a 'cylindrical' body, giving rise to mixed-material
cells.

This is essentially the same problem as the species diffusion TEST 1, only
expressed in terms of temperature rather than concentration; the solutions
should be identical, and the enthalpy 1/4 of the temperature.

Input file is written to allow running the same problem using the existing
HT/PC solver.  Just turn on heat conduction and turn off the diffusion solver
in the PHYSICS namelist.  Note that the mesh is non-orthogonal (a jittered
orthogonal mesh) and that LSLR discrete operator seems to have problems with
it and/or the boundary conditions so ortho operators are used for HT/PC.

&MESH
  mesh_file = 'ds1-randomized.gen'
/

&OUTPUTS
  Output_T = 0.0, 0.1
  Output_Dt = 0.1
/

&PHYSICS
  materials = 'A', 'B', 'VOID'
  heat_transport = .true.
/

&DIFFUSION_SOLVER
  abs_temp_tol       = 1.0e-5
  rel_temp_tol       = 1.0e-3
  abs_enthalpy_tol   = 1.0e-5
  rel_enthalpy_tol   = 1.0e-3
  nlk_tol            = 1.0e-3
  nlk_preconditioner = 'hypre_amg'
  verbose_stepping   = .true.
/

&NUMERICS
  dt_init = 1.0d-5
  dt_min  = 1.0d-9
  dt_grow = 10.0
/

&THERMAL_BC
  name = 'left end'
  type = 'flux'
  face_set_ids = 1
  flux = -10.0
/

&THERMAL_BC
  name = 'right end'
  type = 'temperature'
  Face_Set_IDs = 2
  temp = 0.0
/

&THERMAL_BC
  name = 'symmetry planes'
  type = 'flux'
  face_set_ids = 3
  flux = 0.0
/

&BODY
  surface_name = 'cylinder'
  axis = 'z'
  fill = 'inside'
  translation_pt = 0.0, 0.0, -.5
  radius = 0.18
  height = 1.0
  material_name = 'A'
  temperature = 0.0
/

&BODY
  surface_name = 'background'
  material_name = 'B'
  temperature = 0.0
/

INTERFACES
  Vof_Method = 'divide'
/

&MATERIAL
  name = 'A'
  density = 4.0
  specific_heat = 0.25
  conductivity = 0.05
/

&MATERIAL
  name = 'B'
  density = 4.0
  specific_heat = 0.25
  conductivity_func = 'B-cond'
/

&FUNCTION
  name = 'B-cond'
  type = 'polynomial'
  poly_coefficients   = 1.0
  poly_exponents(1,:) = 1
  poly_refvars = -0.1
/
